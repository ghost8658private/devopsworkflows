name: First mirror from tclone to rtos work

on:
  workflow_call:
    inputs:
      source-repo:
        required: true
        type: string
      target-repo:
        required: true
        type: string
      source-repo-name:
        required: true
        type: string
      target-repo-name:
        required: true
        type: string
      third-repo:
        required: true
        type: string
    secrets:
      ACCESS_TOKEN:
        required: true

jobs:
  first-mirror:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
    

      - name: Set Git Credentials
        run: |
          git config --global user.email "bbbeeeaaabbb9@gmail.com"
          git config --global user.name "ghost8658private"
          git config --global credential.helper store
          echo "https://x-access-token:${{ secrets.ACCESS_TOKEN }}@github.com" > ~/.git-credentials

      - name: Push from ${{ inputs.source-repo-name }}
        run: |
          git clone ${{ inputs.source-repo }}
          cd ${{ inputs.source-repo-name }}
          git remote set-url --push origin ${{ inputs.target-repo }}
          for branch in $(git branch -r --format "%(refname:short)"); do
            # Check if the branch exists in the third repo
            if ! git ls-remote --exit-code --heads ${{ inputs.target-repo }} $branch; then
              # If the branch doesn't exist, create it
              git push --force origin "$branch:$branch"
            else
              # If the branch exists, push it without creating a new one
              git push --force origin "$branch"
            fi
          done

  second-mirror:
    runs-on: ubuntu-latest
    needs: first-mirror

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
    

      - name: Set Git Credentials
        run: |
          git config --global user.email "bbbeeeaaabbb9@gmail.com"
          git config --global user.name "ghost8658private"
          git config --global credential.helper store
          echo "https://x-access-token:${{ secrets.ACCESS_TOKEN }}@github.com" > ~/.git-credentials

      - name: Push from ${{ inputs.target-repo-name }}
        run: |
          git clone ${{ inputs.target-repo }}
          cd ${{ inputs.target-repo-name }}
          git remote set-url --push origin ${{ inputs.third-repo }}
          for branch in $(git branch -r --format "%(refname:short)"); do
            # Check if the branch exists in the third repo
            if ! git ls-remote --exit-code --heads ${{ inputs.third-repo }} $branch; then
              # If the branch doesn't exist, create it
              git push --force origin "$branch:$branch"
            else
              # If the branch exists, push it without creating a new one
              git push --force origin "$branch"
            fi
          done